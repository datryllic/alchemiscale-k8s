apiVersion: v1
kind: PersistentVolume
metadata:
  name: alchemiscale-neo4j-data
  namespace: alchemiscale
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /alchemiscale-neo4j/data #  Set the local storage path for the persistent volume
  storageClassName: alchemiscale-neo4j-data
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
          - key: type
            operator: In
            values:
            - database
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alchemiscale-neo4j-data-claim
  namespace: alchemiscale
spec:
  storageClassName: alchemiscale-neo4j-data
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: alchemiscale-neo4j
  namespace: alchemiscale
spec:
  selector:
    matchLabels:
      app: alchemiscale-neo4j
  serviceName: "neo4j-service"
  replicas: 1
  template:
    metadata:
      labels:
        app: alchemiscale-neo4j
    spec:
      containers:
      - name: neo4j
        image: neo4j:4.4
        envFrom:
          - secretRef:
              name: alchemiscale-neo4j-secrets
        ports:
            - name: bolt
              protocol: TCP
              containerPort: 7687
            - name: viewer-http
              protocol: TCP
              containerPort: 7474
        volumeMounts:
          - name: alchemiscale-neo4j-data-storage
            mountPath: /var/lib/neo4j/data
      volumes:
        - name: alchemiscale-neo4j-data-storage
          persistentVolumeClaim:
            claimName: alchemiscale-neo4j-data-claim
---
apiVersion: v1
kind: Service
metadata:
  name: alchemiscale-neo4j-service
  namespace: alchemiscale
spec:
  selector:
    app: alchemiscale-neo4j
  ports:
  - port: 7687
    name: bolt
  - port: 7474
    name: viewer-http

